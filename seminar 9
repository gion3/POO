#include <iostream>


using namespace std;

class Date {
int day;
int month;
int year;

public:
Date(): day(0), month(0), year(0){}
Date(int d, int m, int y):day(d), month(m),year(y){}
};

class Person {
string name;
string pin;
Date birthday;
string* addresses;
int addressesCount;

public:
Person(){
this->name = ""; // cu sau fara this
this->pin = "";
Date d;
this->birthday = d;
this->addresses = nullptr;
this->addressesCount = 0;
}
Person(string name, string pin, Date birthday, string* addresses, int addressesCount): addressesCount(addressesCount) {
this->name = name;
this->pin = pin;

this->birthday = birthday;
this->addresses = new string[addressesCount];
for (int i = 0; i < addressesCount; i++) {
this->addresses[i] = addresses[i];
}
}
//constr de copiere
Person(const Person& p) {
this->name = p.name;
this->pin = p.pin;
this->addressesCount = p.addressesCount;
this->birthday = p.birthday;
this->addresses = new string[this->addressesCount];
for (int i = 0; i < addressesCount; i++) {
this->addresses[i] = p.addresses[i];
}
}
//operator =
Person& operator = (const Person& p) {
if (this != &p) {
this->name = p.name;
this->pin = p.pin;
this->addressesCount = p.addressesCount;
this->birthday = p.birthday;

delete[] this->addresses;
this->addresses = new string[this->addressesCount];
for (int i = 0; i < addressesCount; i++) {
this->addresses[i] = p.addresses[i];
}
}
return *this;
}
//destructor

~Person() {
delete[] addresses;
}
};

class Student :Person {
int regNo;
float* grades;
int gradesCount;
bool scholarship;
public:
Student(): Person() {
this->regNo = 0;
this->grades = nullptr;
this->gradesCount = 0;
this->scholarship = false;
}
Student (string name, string pin, Date birthday, string* addresses, int addressesCount,int regNo, float* grades,int gradesCount, bool scholarship): Person(name,pin,birthday,addresses,addressesCount), regNo(regNo), gradesCount(gradesCount), scholarship(scholarship){
this->grades = new float[gradesCount];
for (int i = 0; i < gradesCount; i++) {
this->grades[i] = grades[i];
}
}
~Student() {
delete[] grades;
}
};

class University {
string name = "";
string address = "";
Student* students = nullptr;
int studentsCount=0;
public:
University(string name, string address, Student* students, int studentsCount) {
this->name = name;
this->address = address;
this->studentsCount = studentsCount;
this->students = new Student[studentsCount];
for (int i = 0; i < studentsCount; i++) {
this->students[i] = students[i];
}
}
~University()
{
delete[] students;
}
};


int main() {

Date d1;
Date d2(01, 01, 2000);

Person p1;

string* addresses = new string[3];
addresses[0] = "Bucuresti.........";
addresses[1] = "Arad.......";
addresses[2] = "Cta.......";

Person p2("Popescu Andrei", "501010046550080",d2,addresses,3);

Student s1;

float* grades = new float[5];
grades[0] = 6;
grades[1] = 7;
grades[2] = 8;
grades[3] = 9;
grades[4] = 5;

Student s2("Popescu Andrei", "501010046550080", d2, addresses, 3, 123, grades, 5, true);

Student s3("Andresan Andrei", "501010046550080", d2, addresses, 3, 123, grades, 5, true);

Student* students = new Student[3];
students[0] = s1;
students[1] = s2;
students[2] = s3;

University u1("ASE", "Bucuresti", students, 3);

return 0;
}
